---
import { getCollection } from 'astro:content';
import NewsLayout from '../../layouts/NewsLayout.astro';

export async function getStaticPaths() {
  const newsEntries = await getCollection('news');
  return newsEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<NewsLayout 
  title={entry.data.title}
  description={entry.data.description}
  image={entry.data.image}
  publishDate={entry.data.publishDate}
>
  <article class="news-article">
    {entry.data.image && (
      <img src={entry.data.image} alt={entry.data.title} class="featured-image" />
    )}
    <h1>{entry.data.title}</h1>
    <div class="metadata">
      <time datetime={entry.data.publishDate.toISOString()}>
        {entry.data.publishDate.toLocaleDateString()}
      </time>
      <span class="source">
        Source: <a href={entry.data.sourceUrl} target="_blank" rel="noopener noreferrer">
          {entry.data.source}
        </a>
      </span>
    </div>
    <div class="content">
      <Content />
    </div>
  </article>
</NewsLayout>

<style>
  .news-article {
    max-width: 800px;
    margin: 0 auto;
    padding: 2rem 0;
  }

  .featured-image {
    width: 100%;
    height: 400px;
    object-fit: cover;
    border-radius: 8px;
    margin-bottom: 2rem;
  }

  h1 {
    font-size: 2.5rem;
    margin-bottom: 1rem;
  }

  .metadata {
    display: flex;
    gap: 1rem;
    color: #666;
    margin-bottom: 2rem;
  }

  .source a {
    color: #333;
    text-decoration: none;
  }

  .source a:hover {
    text-decoration: underline;
  }

  .content {
    line-height: 1.8;
  }
</style>